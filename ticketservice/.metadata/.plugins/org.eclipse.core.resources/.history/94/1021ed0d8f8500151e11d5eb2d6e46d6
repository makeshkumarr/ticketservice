package org.test.ticketservice.dao.tables;

import java.util.HashMap;
import java.util.Map;

import org.test.ticketservice.vo.LevelRowSeat;

public enum MockLevelRowsTable {
	INSTANCE;
	
	Map<Integer,Map<Integer,Map<Integer,LevelRowSeat>>> venueLevelSeats = new HashMap<Integer, Map<Integer, Map<Integer,LevelRowSeat>>>();
	
	/*
	 * Set up the initial data
	 */
	private MockLevelRowsTable() {
		LevelRowSeat rowSeat = null;
		//Orchestra level
		Map<Integer, Map<Integer, LevelRowSeat>> rowSeats = new HashMap<Integer, Map<Integer, LevelRowSeat>>();
		Map<Integer, LevelRowSeat> rowSeatMap = new HashMap<Integer, LevelRowSeat>();
		int levelId = 1;
		for(int i=0; i<25; i++) {
			rowSeatMap = new HashMap<Integer, LevelRowSeat>();
			for(int j=0; j<50; j++) {
				rowSeat = new LevelRowSeat(levelId, i+1, j+1);
				rowSeatMap.put(j+1, rowSeat);
			}
			rowSeats.put(i+1, rowSeatMap);
		}
		venueLevelSeats.put(levelId, rowSeats);
		
		//Main level

		venueLevelSeats.put(levelId, rowSeats);
		
		//Balcony 1 level

		venueLevelSeats.put(levelId, rowSeats);
		
		//Balcony 2 level
		venueLevelSeats.put(levelId, rowSeats);
	}
	
//	public LevelRowSeat getLevelRowSeats(int levelId, int rowNumber) {
//		Map<Integer, LevelRowSeat> levelRowsMap = venueLevelSeats.get(levelId);
//		if(levelRowsMap == null) {
//			return new LevelRowSeat(levelId,rowNumber);
//		}
//		LevelRowSeat levelRowSeats = levelRowsMap.get(rowNumber);
//		if(levelRowSeats == null) {
//			return new LevelRowSeat(levelId,rowNumber);
//		}
//		return levelRowSeats;
//	}
//	
//	public void reserveSeats(int levelId, int rowNumber, int noOfSeats) {
//		LevelRowSeat levelRowSeats = getLevelRowSeats(levelId, rowNumber);
//		levelRowSeats.addReservedSeats(noOfSeats);
//	}
//	
//	public void holdSeats(int levelId, int rowNumber, int noOfSeats) {
//		LevelRowSeat levelRowSeats = getLevelRowSeats(levelId, rowNumber);
//		levelRowSeats.addHoldSeats(noOfSeats);
//	}
}
